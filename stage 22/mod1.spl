alias functionNum R1;
alias currentPID R2;
alias uPageNum R5;

if(functionNum == 1) then
	R7 = 0;
	while(R7 < 16) do
		if([PROCESS_TABLE + (R7*16) + 4] == TERMINATED) then
			break;
		endif;	
		R7 = R7 + 1;
	endwhile;
	if(R7 != 16) then
		R0 = R7;
		[PROCESS_TABLE + (R7*16) + 4] = ALLOCATED;
		[PROCESS_TABLE + (R7*16) + 14] = PAGE_TABLE_BASE + (R0*20);
		[PROCESS_TABLE + (R7*16) + 15] = 10; 
	else
		R0 = -1;
	endif;
	return;
endif;
if(functionNum == 2) then
	uPageNum = [PROCESS_TABLE + (currentPID*16) + 11];
	R8 = uPageNum*512 + 496;
	R9 = 0;
	while(R9 < 8) do
		if([R8 + (2*R9)] == 1) then
			multipush(R1,R2,R3,R5,R6,R8,R9);
			R1 = 7;
			R3 = [R8 + (2*R9) + 1];
			call MOD_0;
			multipop(R1,R2,R3,R5,R6,R8,R9);
		endif;
		R9 = R9 + 1;
	endwhile;
	multipush(R1,R2,R5,R6);
	R1 = 2;
	R2 = uPageNum;
	call MOD_2;
	multipop(R1,R2,R5,R6);
	return;
endif;

if(functionNum == 3) then
	multipush(R1,R2,R5,R6);
	R1 = 4;
	call MOD_1;
	multipop(R1,R2,R5,R6);
	multipush(R1,R2,R5,R6);
	R1 = 2;
	call MOD_1;
	multipop(R1,R2,R5,R6);
	if([PROCESS_TABLE + (currentPID*16) + 9] != 9) then
		R7 = 0;
		while(R7 < 16) do
			if(([PROCESS_TABLE + (R7*16) + 4] == WAIT_PROCESS) && ([PROCESS_TABLE + (R7*16) + 5] == currentPID)) then
				[PROCESS_TABLE + (R7*16) + 4] = READY;
			endif;
			if([PROCESS_TABLE + (R7*16) + 2] == currentPID) then
				[PROCESS_TABLE + (R7*16) + 2] = -1;
			endif;	 
			R7 = R7 + 1;
		endwhile;
	endif;
	[PROCESS_TABLE + (currentPID*16) + 4] = TERMINATED;
	return;
endif;

if(functionNum == 4) then
	[PTBR + 0] = -1;
	[PTBR + 1] = "0000";
	[PTBR + 2] = -1;
	[PTBR + 3] = "0000";
	alias i R6;
	i = 4;
	while(i < 20) do
		if(([PTBR + i]) != -1) then
			multipush(R1,R2,R5,R6);
			R1 = 2;
			R2 = [PTBR + i];
			call MOD_2;
			multipop(R1,R2,R5,R6);
			[PTBR + i] = -1;
			[PTBR + i + 1] = "0000";
		endif;
		i = i + 2;
	endwhile;
	i = 2;
	while(i <= 3) do
		if([DISK_MAP_TABLE + (R2*10) + i] != -1) then
			multipush(R1,R2,R5,R6);
			R1 = 4;
			R5 = R2;
			R2 = [DISK_MAP_TABLE + (R5*10) + i];
			call MOD_2;
			multipop(R1,R2,R5,R6);
			[DISK_MAP_TABLE + (R2*10) + i] = -1;
		endif;
		i = i + 1;
	endwhile;
	i = 8;
	while(i <= 9) do
		if([DISK_MAP_TABLE + (R2*10) + i] != -1) then
			multipush(R1,R2,R5,R6);
			R1 = 4;
			R5 = R2;
			R2 = [DISK_MAP_TABLE + (R5*10) + i];
			call MOD_2;
			multipop(R1,R2,R5,R6);
			[DISK_MAP_TABLE + (R2*10) + i] = -1;
		endif;
		i = i + 1;
	endwhile;
	i = 0;
	while(i < 10) do
		[DISK_MAP_TABLE + (R2*10) + i] = -1;
		i = i + 1;
	endwhile;
	return;
else
	return;	
endif;