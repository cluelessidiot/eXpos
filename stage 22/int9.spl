[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 9;
alias userSP R4;
userSP = SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = userSP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 - 1;

alias fileName R5;
fileName = [([PTBR + 2*((userSP - 4) / 512)]*512) + ((userSP - 4) % 512)];
alias i R6;
alias retValAdd R7;
retValAdd = ([PTBR + 2*((userSP - 1) / 512)]*512) + ((userSP - 1) % 512);
i = 0;
while(i < 60) do
	if(([INODE_TABLE + (i*16)] == EXEC) && ([INODE_TABLE + (i*16) + 1] == fileName)) then
		break;
	endif;	
	i = i + 1;
endwhile;

if(i >= 60) then
	[retValAdd] = -1;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;
	SP = userSP;
	ireturn;
else
	//print "etthi";
	multipush(R1,R2,R4,R5,R6,R7);
	R1 = 3;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_1;
	multipop(R1,R2,R4,R5,R6,R7);

	R8 = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11];

	[MEMORY_FREE_LIST + R8] = [MEMORY_FREE_LIST + R8] + 1;

	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

	SP = (R8*512) - 1;

	R8 = ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512) + 496;
	R9 = 0;

	while(R9 < 8) do
		[R8 + (R9*2)] = -1;
		R9 = R9 + 1;
	endwhile;

	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 4] = RUNNING;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 7] = i;

	[PTBR + 0] = 63;
	[PTBR + 1] = "0100";
	[PTBR + 2] = 64;
	[PTBR + 3] = "0100";

	[PTBR + 4] = -1;
	[PTBR + 5] = "0000";

	[PTBR + 6] = -1;
	[PTBR + 7] = "0000";

	multipush(R1,R2,R4,R5,R6,R7);
	R1 = 1;
	call MOD_2;
	multipop(R1,R2,R4,R5,R6,R7);
	
	[PTBR + 16] = R0;
	[PTBR + 17] = "0110";

	multipush(R1,R2,R4,R5,R6,R7);
	R1 = 1;
	call MOD_2;
	multipop(R1,R2,R4,R5,R6,R7);

	[PTBR + 18] = R0;
	[PTBR + 19] = "0110";

	R9 = 8;

	R10 = 8;

	multipush(R1,R2,R4,R5,R6,R7,R9,R10,R11);
	R1 = 5;
	R2 = [INODE_TABLE + (i*16) + 8];
	call MOD_2;
	multipop(R1,R2,R4,R5,R6,R7,R9,R10,R11);

	[PTBR + 8] = R0;
	[PTBR + 9] = "0100";
	[PTBR + 10] = -1;
	[PTBR + 11] = "0000";
	[PTBR + 12] = -1;
	[PTBR + 13] = "0000";
	[PTBR + 14] = -1;
	[PTBR + 15] = "0000";

	R10 = [PTBR + 16];
	R9 = [PTBR + 8];
	[R10*512] = [R9*512 + 1];
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;

	R9 = 0;
	while(R9 < 10) do
		[DISK_MAP_TABLE + ([SYSTEM_STATUS_TABLE + 1]*10) + R9] = -1;
		R9 = R9 + 1;
	endwhile;

	R9 = 4;
	R10 = 8;

	while(R9 <= 7) do
		[DISK_MAP_TABLE + ([SYSTEM_STATUS_TABLE + 1]*10) + R9] = [INODE_TABLE + (i*16) + R10];
		R9 = R9 + 1;
		R10 = R10 + 1;
	endwhile;

	SP = 8*512;
	ireturn;
endif;