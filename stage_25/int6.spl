[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 7;
alias userSP R0;
userSP=SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = userSP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512 - 1;
alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2 * ((userSP - 4)/ 512)];
offset = (userSP - 4) % 512;
fileDescPhysicalAddr = (physicalPageNum * 512) + offset;
alias fileDescriptor R4;
fileDescriptor=[fileDescPhysicalAddr];
alias physicalAddrRetVal R5;
physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
alias word R6;
word = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];
if (fileDescriptor == -1) then
	multipush(R0,R1,R2,R3,R4,R5,R6);
	physicalPageNum = 4;					//Terminal Read
	offset = [SYSTEM_STATUS_TABLE + 1];		//pid
	fileDescPhysicalAddr = word;			//word to be read
	call MOD_4;
	multipop(R0,R1,R2,R3,R4,R5,R6);
	[physicalAddrRetVal] = 0;
else
	if (fileDescriptor < 0 || fileDescriptor > 7) then
		[physicalAddrRetVal] = -1;
	else
		alias perprocesstable R7;
		perprocesstable = ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]) * 512 + (512 - 16);
		if ([perprocesstable + 2 * fileDescriptor] != FILE) then
			[physicalAddrRetVal] = -1;
		else
			alias filetableindex R8;
			alias inodetableindex R9;
			filetableindex = [perprocesstable + 2 * fileDescriptor + 1];
			inodetableindex = [OPEN_FILE_TABLE + 4 * filetableindex + 0];
			multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			R1 = 4;
			R2 = inodetableindex;
			R3 = [SYSTEM_STATUS_TABLE + 1];
			call MOD_0;										//acquire inode
			R10 = R0;
			multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			if (R10 != 0) then
				[physicalAddrRetVal] = -1;
			else
				alias lseek R10;
				lseek = [OPEN_FILE_TABLE + 4 * filetableindex + 2];
				if ([OPEN_FILE_TABLE + 4 * filetableindex] == INODE_ROOT) then
					if (lseek == 480) then
						[physicalAddrRetVal] = -2;
					else
						[([PTBR + 2*(word/512)])*512 + (word%512)] = [ROOT_FILE + lseek];
						[OPEN_FILE_TABLE + 4 * filetableindex + 2] = [OPEN_FILE_TABLE + 4 * filetableindex + 2] + 1;
						[physicalAddrRetVal] = 0;
					endif;
				else
					if (lseek == [INODE_TABLE + 16 * inodetableindex + 2]) then
						[physicalAddrRetVal] = -2;
					else
						//lseek to address
						R11 = lseek / 512;
						multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
						R1 = 2;
						R2 = [INODE_TABLE + 16 * inodetableindex + 8 + R11];
						R3 = lseek % 512; 
						R4 = word;
						call MOD_3;
						multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
						[OPEN_FILE_TABLE + 4 * filetableindex + 2] = [OPEN_FILE_TABLE + 4 * filetableindex + 2] + 1;
						[physicalAddrRetVal] = 0;
					endif;
				endif;
			endif;
			multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
			R1 = 5;
			R2 = inodetableindex;
			R3 = [SYSTEM_STATUS_TABLE + 1];
			call MOD_0;							//release inode
			multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
		endif;
	endif;
endif;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
SP = userSP;
ireturn;