[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
alias userSP R0;
userSP=SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512 - 1;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 21;
if ([SYSTEM_STATUS_TABLE + 1] != 1 || [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 3] != 1) then	//given || if not root
	alias physicalAddrRetVal R1;
	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = -1;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	ireturn;
endif;
R1 = 5;
R2 = [SYSTEM_STATUS_TABLE + 1];
call MOD_1;									//kill all
//buffer table
R1 = 0;
while (R1 < 4) do
	if ([BUFFER_TABLE + 4 * R1 + 1] == 1) then
		multipush(R1);
		R2 = [SYSTEM_STATUS_TABLE + 1];
		R3 = 71 + R1;
		R4 = [BUFFER_TABLE + 4 * R1];
		R1 = 1;
		call MOD_4;
		multipop(R1);
	endif;
	R1 = R1 + 1;
endwhile;
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 59;									//Inode + user
R4 = 3;
call MOD_4;
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 60;									//Inode + user
R4 = 4;
call MOD_4;
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 61;									//diskfree list
R4 = 2;
call MOD_4;
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 62;									//root file
R4 = 5;
call MOD_4;
halt;
