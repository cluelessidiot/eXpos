[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
alias userSP R0;
userSP = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512 - 1;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 27;
if ([SYSTEM_STATUS_TABLE + 1] != 1) then
	alias physicalAddrRetVal R1;
	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = -2;
	ireturn;
endif;
alias username R1;
username = [([PTBR + 2 * ((userSP - 4) / 512)] * 512) + ((userSP - 4) % 512)];
alias password R2;
password = [([PTBR + 2 * ((userSP - 3) / 512)] * 512) + ((userSP - 3) % 512)];
encrypt password;
alias counter R3;
alias flag R4;
counter = 0;
flag = -1;
while (counter < MAX_USER_NUM) do
	if ([USER_TABLE + 2 * counter] == username && [USER_TABLE + 2 * counter + 1] == password) then
		flag = 1;
		break;
	endif;
	counter = counter + 1;
endwhile;
if (flag == -1) then
	alias physicalAddrRetVal R1;
	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = -1;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	ireturn;
endif;
[PROCESS_TABLE + (2 * 16) + 4] = CREATED;			//shell process
[PROCESS_TABLE + (2 * 16) + 3] = counter;		//table id
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_PROCESS;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 5] = 2;			//shell process
[SYSTEM_STATUS_TABLE + 0] = counter;						//user id
multipush(R0,R1,R2,R3,R4);
call MOD_5;
multipop(R0,R1,R2,R3,R4);
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
ireturn;