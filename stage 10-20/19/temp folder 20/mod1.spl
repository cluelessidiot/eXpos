alias funcnum R1;
alias pid R2;
if(R1==2) then
goto freeuser;
if(R1==1) then
goto getpcbentry;
else
if(R1==4) then
goto freepage;
else
goto exitf;
endif;
endif;
endif;
getpcbentry:
R4=0;
R3=0;
while([PROCESS_TABLE+R3*16+4]!=TERMINATED &&n R3<=16)do
 R3=R3+1;
 endwhile;
 if(R3==17) then
   R3=-1;
   return;
 endif;  
 [PROCESS_TABLE+R3*16+14]=PROCESS_TABLE+R3*14;
 [PROCESS_TABLE+R3*16+15]=10;
 [PROCESS_TABLE+R3*16+1]=R3;
   
 return;

freeuser:
R3=[PROCESS_TABLE+R2*16+11];
multipush(R1,R2,R3);
R1=2;
R2=R3;
call MOD_2;
multipop(R1,R2,R3);
return;

freepage:
[PTBR+0]=-1;
[PTBR+1]="0000";
[PTBR+2]=-1;
[PTBR+3]="0000";

R4=0;
while(R4<20) do
if([PTBR+R4]!=-1) then
  R3=[PTBR+R4];
  multipush(R1,R2,R3,R4);
R1=2;
R2=R3;
call MOD_2;
multipop(R1,R2,R3,R4);
[PTBR+R4]=-1;
[PTBR+R4+1]="0000";
 endif;
 R4=R4+2; 
 endwhile;
if([DISK_MAP_TABLE+R2*10+2]!=-1) then
 multipush(R1,R2,R3); 
 R1=4;
 R3=pid;
 R2=[DISK_MAP_TABLE+R2*10+2];
 call MOD_2;
 multipop(R1,R2,R3); 
endif;
if([DISK_MAP_TABLE+R2*10+3]!=-1) then
 multipush(R1,R2,R3); 
 R1=4;
 R3=pid;
 R2=[DISK_MAP_TABLE+R2*10+2];
 call MOD_2;
 multipop(R1,R2,R3); 
endif;
if([DISK_MAP_TABLE+R2*10+8]!=-1) then
 multipush(R1,R2,R3); 
 R1=4;
 R3=pid;
 R2=[DISK_MAP_TABLE+R2*10+2];
 call MOD_2;
  multipop(R1,R2,R3); 
endif;
if([DISK_MAP_TABLE+R2*10+9]!=-1) then
 multipush(R1,R2,R3); 
 R1=4;
 R3=pid;
 R2=[DISK_MAP_TABLE+R2*10+2];
 call MOD_2;
  multipop(R1,R2,R3); 
endif;
R4=0;
while(R4!=10) do
[DISK_MAP_TABLE+R2*10+R4]=-1;
R4=R4+1;
endwhile;
return;

exitf:
multipush(R1,R2,R3);
R1=2;
call MOD_1;
R1=4;
call MOD_1;
multipop(R1,R2,R3);
[PROCESS_TABLE+R2*16+4]=TERMINATED;
return;

