[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 7;
alias userSP R0;
userSP=SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = userSP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512 - 1;
alias fileDescriptor R1;
fileDescriptor=[([PTBR + 2 * ((userSP - 4)/ 512)]*512+(userSP - 4) % 512)];
alias physicalAddrRetVal R2;
physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
alias word R3;
word = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];
//check if its file read ......................
if (fileDescriptor == -1) then
	multipush(R0,R1,R2,R3,R4,R5,R6);
	physicalPageNum = 4;			        //Terminal Read
	offset = [SYSTEM_STATUS_TABLE + 1];		//pid
	fileDescPhysicalAddr = word;			//word to be read
	call MOD_4;
	multipop(R0,R1,R2,R3,R4,R5,R6);
	[physicalAddrRetVal] = 0;
else
	if (fileDescriptor < 0 || fileDescriptor > 7) then  //checkinng file discriptrorrrr......
		[physicalAddrRetVal] = -1;
	else
		alias perprocesstable R4;
		perprocesstable = ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]) * 512 + (512 - 16);
		if ([perprocesstable + 2 * fileDescriptor] != FILE) then
			[physicalAddrRetVal] = -1;
		else
			alias filetableindex R5;
			alias inodetableindex R6;
			filetableindex = [perprocesstable + 2 * fileDescriptor + 1];
			inodetableindex = [OPEN_FILE_TABLE + 4 * filetableindex + 0];
			multipush(R1,R2,R3,R4,R5,R6);
			R1 = 4;
			R2 = inodetableindex;
			R3 = [SYSTEM_STATUS_TABLE + 1];
			call MOD_0;										//acquire inode
			R10 = R0;
			multipop(R1,R2,R3,R4,R5,R6);
			if (R0 != 0) then
				return;
			endif;
			alias lseek R7;
			lseek = [OPEN_FILE_TABLE + 4 * filetableindex + 2];
			if ([OPEN_FILE_TABLE + 4 * filetableindex] == INODE_ROOT) then //ifts root.......
				if (lseek == 480) then ///max size root =480...............
					[physicalAddrRetVal] = -2;
				else
					[word] = [ROOT_FILE + lseek];
					[OPEN_FILE_TABLE + 4 * filetableindex + 2] = [OPEN_FILE_TABLE + 4 * filetableindex + 2] + 1;
					[physicalAddrRetVal] = 0;
				endif;
			else
				if (lseek == [INODE_TABLE + 16 * inodetableindex + 2]) then   //check with size of file na sss
					[physicalAddrRetVal] = -2;
				else
					//lseek to address
					R11 = lseek / 512;
					multipush(R0,R1,R2,R3,R4,R5,R6,R7);
					R1 = 2;//acquire buffer..................................
					R2 = [INODE_TABLE + 16 * inodetableindex + 8 + R11];
					R3 = lseek % 512; 
					R4 = word;
					call MOD_3;
					multipop(R0,R1,R2,R3,R4,R5,R6,R7);//increment lseek............
					[OPEN_FILE_TABLE + 4 * filetableindex + 2] = [OPEN_FILE_TABLE + 4 * filetableindex + 2] + 1;
					[physicalAddrRetVal] = 0;
				endif;
			endif;
			multipush(R0,R1,R2,R3,R4,R5,R6,R7);
			R1 = 5;
			R2 = inodetableindex;
			R3 = [SYSTEM_STATUS_TABLE + 1];
			call MOD_0;							//release inode...........
			multipop(R0,R1,R2,R3,R4,R5,R6,R7);
		endif;
	endif;
endif;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
SP = userSP;
ireturn;
