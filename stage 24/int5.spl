//used reg....
// R1 usersp
//R2 syscallNum
// R3 retValAdd
//R4 fileName
//R5 PerProcessTable


alias userSP R1; 
userSP = SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = SP; //setting user stack
alias sysCallNum R2;//physical page number
sysCallNum = [([PTBR + 2*((userSP - 5) / 512)]*512) + ((userSP - 5) % 512)]; //extracting system call...................
alias retValAdd R3;
retValAdd = ([PTBR + 2*((userSP - 1) / 512)]*512) + ((userSP - 1) % 512);
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 - 1;
alias fileName R4;
fileName = [([PTBR + 2*((userSP - 4) / 512)]*512) + ((userSP - 4) % 512)];
if(sysCallNum == 2) then
    [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 2;
    alias PerProcessTable R5;
    PerProcessTable = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]+496;//512-16
     R6=0;
    while(R6<16) do
        if([R6+PerProcessTable]==-1) then //NASILAAAAAAAAAAAAAA........
            break;
        endif;
        R6=R6+2;
    endwhile;
    //print "free ppt entry";
    //print R6;
    if(R6==16) then
        [retValAdd]=-3; //perprocess table full.......... 
      	SP = userSP;//am i need to return
	    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;
	    ireturn;
    endif;
    //calling open in file manger module
    	print "call fimn";
    	multipush(R1,R2,R3,R4,R5,R6);
			R1 =3;
			R2=fileName;
		    call MOD_3;
        multipop(R1,R2,R3,R4,R5,R6);
		 if( R0==-2) then //no free entries
		        [retValAdd]=-2; 
      			SP = userSP;
				[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;
				ireturn;
			endif;	
			 if(R0==-1 ) then //not dat or inode index isnt found
		        [retValAdd]=-1; 
      			SP = userSP;
				[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;
				ireturn;
			endif;
     		 [PerProcessTable+R6]=FILE;
    	     [R6+R5+1]=R0;
    	     [retValAdd]=R6/2;//index of perprocess
    	     [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;
		SP = userSP;
		print "fo";
		ireturn;
endif;		
if (SyscallNumber == 3) then				//Close
	[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 3; //mode flag
	alias filedescriptor R1;//aka perprocess table entry.........
	filedescriptor= [([PTBR + 2 * ((userSP - 4) / 512)] * 512) + ((userSP - 4) % 512)];
	if (filedescriptor == -1) then
		[physicalAddrRetVal] = -1;
		else
			if ([perprocesstable + 2 * filedescriptor] != FILE)	then//locating perprocess table
				[physicalAddrRetVal] = -1;
			else
				multipush(R0,R1,R2,R3,R4,R5,R6);
				R1 = 4;
				R2 = [perprocesstable + 2 * filedescriptor + 1];
				call MOD_3;											//close
				multipop(R0,R1,R2,R3,R4,R5,R6);
				[perprocesstable + 2 * filedescriptor] = -1;
			endif;
	endif;
endif;
