alias funcnum R1;
alias num R2;
alias pid R3;
pid=[SYSTEM_STATUS_TABLE+1];
if(funcnum==1) then
goto getfree;
else
if(funcnum==2) then
goto release;
else
if(funcnum==4) then
goto releaseblock;
else
goto getcode;
endif;
endif;
endif;

getfree:
[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;
while([SYSTEM_STATUS_TABLE+2]==0) do
  [PROCESS_TABLE+pid*16+4]=WAIT_MEM;
  multipush (R0,R1,R2);
  call MOD_5;
  multipop (R0,R1,R2);
endwhile;
[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;
[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;

alias i R4;
i=0;
while(i<128) do
if([MEMORY_FREE_LIST+i]==0) then
  [MEMORY_FREE_LIST+i]=1;
  break;
else
 i=i+1;
endif;
endwhile;
R0=i;
return;

release:
 [MEMORY_FREE_LIST+R2]= [MEMORY_FREE_LIST+R2]-1;
  if([MEMORY_FREE_LIST+R2]==0) then
   [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
  endif;
  return;

getcode:
R4=0;
while(R4<=15) do
  R5=0; 
  while(R5<=9) do
  if([DISK_MAP_TABLE+R4*10+R5]==num) then
        R0=[PAGE_TABLE_BASE+R4*20+R5*2];
     if(R0!=-1) then
         [MEMORY_FREE_LIST+R0]=[MEMORY_FREE_LIST+R0]+1;
         return;
      endif;
     endif;
    R5=R5+1;
    endwhile;
   R4=R4+1; 
  endwhile;
 
multipush(R1,R2,R3);
R1=1;
call MOD_2;
multipop(R1,R2,R3);
multipush(R1,R2,R3,R0);
R1=2;
R4=num;
R2=[SYSTEM_STATUS_TABLE+1];
R3=R0;
call MOD_4;
multipop(R1,R2,R3,R0);
return;

releaseblock:
[DISK_FREE_LIST+num]=[DISK_FREE_LIST+num]-1;
return;










