//PROCESS MANAGER
alias functionNum R1;
alias currentPID R2;
//free user area page
if(functionNum==2) then
 R3=[PROCESS_TABLE+R2*16+11];
 multipush(R1,R2,R3);
 R1=2;
 R2=R3;
 call MOD_2;
 print "yes";
 multipop(R1,R2,R3);
 return;
endif;


//exit process
 if(functionNum==3) then
 multipush(R1,R2,R3);
 R1=2;
 R2=[SYSTEM_STATUS_TABLE+1];
 call MOD_1;
 R1=4;
 R2=[SYSTEM_STATUS_TABLE+1];
 call MOD_1;
 multipop(R1,R2,R3);
 [PROCESS_TABLE+R2*16+4]=TERMINATED;
 return;
 endif;
 
 //free pagetable
 if(functionNum==4) then
 [PTBR+0] = -1;
 [PTBR+1] = "0000";
 [PTBR+2] = -1;
 [PTBR+3] = "0000";
 R4=0;
 if([DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+2]!=-1) then
   multipush(R1,R2,R3,R4);
   R3=[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+2];
   R1=4;
   call MOD_2;
   multipush(R1,R2,R3,R4);
 endif;
    if([DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+3]!=-1) then
   multipush(R1,R2,R3,R4);
   R3=[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10 +3];
   R1=4;
   call MOD_2;
   multipush(R1,R2,R3,R4);
 endif;
  if([DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+8]!=-1) then
   multipush(R1,R2,R3,R4);
   R3=[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10 +8];
   R1=4;
   call MOD_2;
   multipush(R1,R2,R3,R4);
 endif;
  if([DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+9]!=-1) then
   multipush(R1,R2,R3,R4);
   R3=[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10 +9];
   R1=4;
   call MOD_2;
  
   multipush(R1,R2,R3,R4);
 endif;
 while(R4<10) do
 [DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+R4]=-1;
  R4=R4+1;
  endwhile;
  R4=0;
 
     print 555;
 while(R4<20) do
   if([PTBR+R4]!=-1) then
   R3=[PTBR+R4];
   multipush(R1,R2,R3,R4);
    R1=2;
    R2=R3;
    call MOD_2;
   multipop(R1,R2,R3,R4);
   [PTBR+R4]=-1;
   [PTBR+R4+1]="0000";
   endif;
   R4=R4+2;
 endwhile;
endif;
print 442;
return;
