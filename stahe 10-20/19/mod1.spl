alias functionNum R1;
alias currentPID R2;
if(functionNum==2) then
 R3=[PROCESS_TABLE+R2*16+11];
 multipush(R1,R2,R3);
 R1=2;
 R2=R3;
 call MOD_2;
 multipop(R1,R2,R3);
 return;
endif;
 if(functionNum==3) then
 multipush(R1,R2,R3);
 R1=2;
 R2=[SYSTEM_STATUS_TABLE+1];
 call MOD_1;
 R1=4;
 R2=[SYSTEM_STATUS_TABLE+1];
 call MOD_1;
 multipop(R1,R2,R3);
 [PROCESS_TABLE+R2*16+4]=TERMINATED;
 return;
 endif;
 if(functionNum==4) then
 [PTBR+0] = -1;
 [PTBR+1] = "0000";
 [PTBR+2] = -1;
 [PTBR+3] = "0000";
 R4=0;
 while(R4<20) do
   if([PTBR+R4]!=-1) then
   R3=[PTBR+R4];
   multipush(R1,R2,R3,R4);
    R1=2;
    R2=R3;
    call MOD_2;
   multipop(R1,R2,R3,R4);
   [PTBR+R4]=-1;
   [PTBR+R4+1]="0000";
   endif;
   R4=R4+2;
 endwhile;
 if([DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+2]!=-1) then
   multipush(R1);
   R1=4;
   R2=[DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+2];
   R3=[SYSTEM_STATUS_TABLE+1];
   call MOD_2;
   multipop(R1);
 endif;
  if([DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+3]!=-1) then
    multipush(R1);
   R1=4;
   R2=[DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+3];
   R3=[SYSTEM_STATUS_TABLE+1];
   call MOD_2;
   multipop(R1);
 endif;
  if([DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+8]!=-1) then
   multipush(R1);
   R1=4;
   R2=[DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+8];
   R3=[SYSTEM_STATUS_TABLE+1];
   call MOD_2;
   multipop(R1);
 endif;
  if([DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+9]!=-1) then
   multipush(R1);
   R1=4;
   R2=[DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+9];
   R3=[SYSTEM_STATUS_TABLE+1];
   call MOD_2;
   multipop(R1);
 endif;
 R3=0;
 while(R3<10) do
 [DISK_STATUS_TABLE+[SYSTEM_STATUS_TABLE+1]*10+R3]=-1;
 R3=R3+1;
endwhile;
 return;
endif;
if(functionNum ==1) then
 R3=0;
 while(R3<16) do
  if([PROCESS_TABLE+R3*16 +4]==TERMINATED) then
   [PROCESS_TABLE+R3*16+1]=R3;
   [PROCESS_TABLE+R3*16+14]=PAGE_TABLE_BASE+20*R3;
   [PROCESS_TABLE+R3*16+15]=10;
   R0=R3;
   return;
  endif;
 R3=R3+1;
 endwhile;
 R0=-1;
 return;
endif; 
return;

